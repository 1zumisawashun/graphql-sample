{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    // "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier",
    "plugin:tailwindcss/recommended"
  ],
  "plugins": ["@typescript-eslint", "import", "unused-imports", "tailwindcss"],
  "rules": {
    "semi": "error",
    // "no-console": "error",
    "no-var": "error",
    "sort-imports": 0,
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    // "no-unused-vars": "off",
    // "@typescript-eslint/no-unused-vars": ["off"],
    "@typescript-eslint/ban-types": [
      "off"
      // {
      //   "types": {
      //     // add a custom message to help explain why not to use it
      //     "Foo": "Don't use Foo because it is unsafe",

      //     // add a custom message, AND tell the plugin how to fix it
      //     "OldAPI": {
      //       "message": "Use NewAPI instead",
      //       "fixWith": "NewAPI"
      //     },

      //     // un-ban a type that's banned by default
      //     "{}": false
      //   },
      //   "extendDefaults": true
      // }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "warn",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          ["parent", "sibling"],
          "object",
          "type",
          "index"
        ],
        "newlines-between": "always",
        "pathGroupsExcludedImportTypes": ["builtin"],
        "alphabetize": { "order": "asc", "caseInsensitive": true }
      }
    ],
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      { "vars": "all", "varsIgnorePattern": "^_", "args": "after-used", "argsIgnorePattern": "^_" }
    ],
    "tailwindcss/classnames-order": "warn",
    "tailwindcss/no-custom-classname": "warn",
    "tailwindcss/no-contradicting-classname": "error"
  }
}
